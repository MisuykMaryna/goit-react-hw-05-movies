{"version":3,"file":"static/js/790.b8c5436e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/HomeItem/HomeItem.module.css?b957","components/HomeItem/HomeItem.jsx","webpack://react-homework-template/./src/components/HomeList/HomeList.module.css?a1f5","components/HomeList/Homelist.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"homeItem\":\"HomeItem_homeItem__-CeBM\",\"homeItem_image\":\"HomeItem_homeItem_image__wJ9BE\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport noImage from 'images/noImage.jpg';\nimport css from './HomeItem.module.css'\n\n\nconst HomeItem = ({ id, title, poster_path, link, location }) => {\n  return (\n    <li className={css.homeItem} key={id}>\n          <Link to={link} state={{ from: location }} >\n             <img className={css.homeItem_image} src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : noImage\n                    } alt={title}/>\n        <p>{title}</p>\n      </Link>\n    </li>\n  );\n};\nexport default HomeItem;\n\nHomeItem.propTypes = {\n  id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  location: PropTypes.objectOf(PropTypes.string),\n};","// extracted by mini-css-extract-plugin\nexport default {\"homeList\":\"HomeList_homeList__+GGD4\"};","\nimport HomeItem from 'components/HomeItem/HomeItem';\nimport PropTypes from 'prop-types';\nimport css from './HomeList.module.css';\n\nconst HomeList = ({ movies, link, location }) => {\n  return (\n    <ul className={css.homeList}>\n      {movies.map(movie => {\n        return (\n          < HomeItem\n            {...movie}\n            key={movie.id}\n            link={`${link}${movie.id}`}\n            location={location}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport default HomeList;\n\nHomeList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired))\n    .isRequired,\n  link: PropTypes.string.isRequired,\n};\n\n// const HomeList = ({ movies,id, poster_path, original_title\n//  }) => {\n//   const location = useLocation();\n\n//   return movies.map(({movie}) => {\n//     return (\n//       <li key={id}>\n//         <Link to={`movies/${id}`} state={{ from: location }}>\n//           <img\n//              src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n//             alt={original_title}\n//           />\n//           <p>{original_title}</p>\n//         </Link>\n//       </li>\n      \n//     );\n//   })\n    \n// }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"SearchForm_button\":\"Movies_SearchForm_button__gq07l\",\"SearchForm_label\":\"Movies_SearchForm_label__DjY7Q\",\"SearchForm_input\":\"Movies_SearchForm_input__ye37+\"};","import React, { useState, useEffect } from 'react';\nimport api from 'services/Api';\nimport Notiflix from 'notiflix';\nimport HomeList from 'components/HomeList/Homelist';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\n\nconst Movies = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const query = (searchParams.get('query') ?? '').trim();\n    useEffect(() => {\n       if (!query) {\n      return;\n    }\n    api\n      .getSearchedMovies(query)\n        .then(results => {\n          if (!results.length) {\n          Notiflix.Notify.warning('We have not movies by this title.');\n          return;\n        }\n        setMovies(results);\n      })\n        \n      .catch(error => {\n        console.log(error);\n      });\n    }, [query, searchParams]);\n    \n    const onChange = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    let value = event.target.elements.search.value;\n    setSearchQuery(value);\n    setSearchParams({ query: value });\n    if (query && query.trim() === '') {\n      Notiflix.Notify.warning('Type title of movie.');\n      return;\n    }\n    setSearchQuery('');\n  };\n\n    return (\n        <>\n<form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchForm_button}>\n          <span className={css.SearchForm_label}>Search</span>\n        </button>\n          <input\n          className={css.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"search\"\n          autoFocus\n          placeholder=\"Search movie by name...\"\n          value={searchQuery}\n          onChange={onChange}\n        ></input>\n      </form>\n            {movies && <HomeList movies={movies} link={' '} />}\n            </>\n    )\n   \n}\n\nexport default Movies;\n\n","import axios from 'axios';\nconst API_KEY = '4123e3b2001d1c6636516ddf9773c242';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, title, original_title, poster_path }) => ({  id,\n            title: title || original_title,\n            poster_path, }));;\n    });\n};\n\nconst getSearchedMovies = query => {\n  return axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(\n          ({ id, title, original_title, poster_path }) => ({\n            id,\n            title: title || original_title,\n            poster_path,\n          })\n        );;\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data;\n    });\n};\n\nconst getMovieCast = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.cast;\n    } )\n\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n    });\n    \n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchedMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;"],"names":["id","title","poster_path","link","location","className","css","Link","to","state","from","src","noImage","alt","movies","map","movie","key","useState","searchQuery","setSearchQuery","setMovies","useSearchParams","searchParams","setSearchParams","query","get","trim","useEffect","api","then","results","length","Notiflix","catch","error","console","log","onSubmit","event","preventDefault","value","target","elements","search","type","autoComplete","name","autoFocus","placeholder","onChange","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","original_title","getSearchedMovies","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","author","content"],"sourceRoot":""}