{"version":3,"file":"static/js/900.25434419.chunk.js","mappings":"oOACA,EAA2B,uB,SCuD3B,EAlDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACSC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBP,OAdAE,EAAAA,EAAAA,YAAU,WACHF,GAGPG,EAAAA,EAAAA,aACgBH,GACbI,MAAK,SAAAN,GACJC,EAAQD,EACT,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACN,KAGH,8BACc,OAATF,GAAiC,IAAhBA,EAAKW,QAC1B,0BACE,eAAIC,UAAWC,EAAf,SACGb,EAAKc,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACrC,OACE,2BACE,gBACEC,IACID,EAAY,yCAC0BA,GAClCE,EAERC,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeD,OAVRD,EAaZ,SAIY,oFAMpB,C,mCCrDKO,EAAU,mCACVC,EAAW,gCAwDXlB,EAAM,CACVmB,kBAvDwB,WACxB,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,sCACyCD,IAC7ChB,MAAK,SAAAoB,GACJ,OAAOA,EAASC,KAAKC,QAAQd,KAAI,gBAAGe,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,MAAiD,CAAGF,GAAAA,EAC/EC,MAAOA,GAASC,EAChBC,YAF2B,EAA8BA,YAA9B,GAGlC,GACJ,EAgDCC,kBA9CwB,SAAAC,GACxB,OAAOT,EAAAA,EAAAA,IAAA,UACGF,EADH,8BACiCW,EADjC,oBACkDZ,IACtDhB,MAAK,SAAAoB,GACJ,OAAOA,EAASC,KAAKC,QAAQd,KACzB,gBAAGe,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,MAAiD,CAC/CF,GAAAA,EACAC,MAAOA,GAASC,EAChBC,YAHF,EAA8BA,YAA9B,GAML,GACJ,EAmCCG,gBAjCsB,SAAAjC,GACtB,OAAOuB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBrB,EADpB,oBACuCoB,IAC3ChB,MAAK,SAAAoB,GACJ,OAAOA,EAASC,IACjB,GACJ,EA4BCS,aA1BmB,SAAAlC,GACnB,OAAOuB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBrB,EADpB,4BAC+CoB,IACnDhB,MAAK,SAAAoB,GACJ,OAAOA,EAASC,KAAK3B,IACtB,GAEJ,EAoBCqC,gBAlBsB,SAAAnC,GACtB,OAAOuB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBrB,EADpB,4BAC+CoB,IACnDhB,MAAK,SAAAoB,GACJ,OAAOA,EAASC,KAAKC,QAAQd,KAAI,kBAA8B,CAC7De,GAD+B,EAAGA,GAElCS,OAF+B,EAAOA,OAGtCC,QAH+B,EAAeA,QAAf,GAKlC,GAEJ,GASD,K","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/Api';\nimport noImage from 'images/noImage.jpg';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n   const { movieId } = useParams();\n\n    useEffect(() => {\n      if (!movieId) {\n      return;\n    }\n    api\n      .getMovieCast(movieId)\n      .then(cast => {\n        setCast(cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n    return (\n   <>\n       {cast !== null && cast.length !== 0 ? (\n    <div>\n      <ul className={css.castList}>\n        {cast.map(({ cast_id, character, name, profile_path }) => {\n          return (\n            <li key={cast_id}>\n              <img\n                src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : noImage\n                  }\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n        </div>\n            ) : (\n                     <p>\n          Sorry, but we don't have a list of cast for this movie.\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default Cast;","import axios from 'axios';\nconst API_KEY = '4123e3b2001d1c6636516ddf9773c242';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, title, original_title, poster_path }) => ({  id,\n            title: title || original_title,\n            poster_path, }));;\n    });\n};\n\nconst getSearchedMovies = query => {\n  return axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(\n          ({ id, title, original_title, poster_path }) => ({\n            id,\n            title: title || original_title,\n            poster_path,\n          })\n        );;\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data;\n    });\n};\n\nconst getMovieCast = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.cast;\n    } )\n\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n    });\n    \n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchedMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;"],"names":["useState","cast","setCast","movieId","useParams","useEffect","api","then","catch","error","console","log","length","className","css","map","cast_id","character","name","profile_path","src","noImage","alt","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","results","id","title","original_title","poster_path","getSearchedMovies","query","getMovieDetails","getMovieCast","getMovieReviews","author","content"],"sourceRoot":""}