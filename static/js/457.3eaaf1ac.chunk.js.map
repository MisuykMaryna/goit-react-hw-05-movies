{"version":3,"file":"static/js/457.3eaaf1ac.chunk.js","mappings":"kNACA,EAA0B,yB,SCGlBA,EAAcC,EAAQ,IAAtBD,UAqCR,EAnCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYL,IAAZK,QAgBN,OAdFC,EAAAA,EAAAA,YAAU,WACHD,GAGLE,EAAAA,EAAAA,gBACmBF,GAChBG,MAAK,SAAAC,GACJL,EAAWK,EACZ,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACN,KAGC,eAAIS,UAAWC,EAAf,SACCZ,EAAQa,OAGRb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QACzB,OACI,2BACF,qCAAaF,MACX,uBAAIE,MAFKD,EAKd,KATF,uDAaN,C,mCCvCKE,EAAU,mCACVC,EAAW,gCAwDXf,EAAM,CACVgB,kBAvDwB,WACxB,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,sCACyCD,IAC7Cb,MAAK,SAAAiB,GACJ,OAAOA,EAASC,KAAKjB,QAAQQ,KAAI,gBAAGE,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,MAAiD,CAAGT,GAAAA,EAC/EQ,MAAOA,GAASC,EAChBC,YAF2B,EAA8BA,YAA9B,GAGlC,GACJ,EAgDCC,kBA9CwB,SAAAC,GACxB,OAAOP,EAAAA,EAAAA,IAAA,UACGF,EADH,8BACiCS,EADjC,oBACkDV,IACtDb,MAAK,SAAAiB,GACJ,OAAOA,EAASC,KAAKjB,QAAQQ,KACzB,gBAAGE,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,MAAiD,CAC/CT,GAAAA,EACAQ,MAAOA,GAASC,EAChBC,YAHF,EAA8BA,YAA9B,GAML,GACJ,EAmCCG,gBAjCsB,SAAA3B,GACtB,OAAOmB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBjB,EADpB,oBACuCgB,IAC3Cb,MAAK,SAAAiB,GACJ,OAAOA,EAASC,IACjB,GACJ,EA4BCO,aA1BmB,SAAA5B,GACnB,OAAOmB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBjB,EADpB,4BAC+CgB,IACnDb,MAAK,SAAAiB,GACJ,OAAOA,EAASC,KAAKQ,IACtB,GAEJ,EAoBCC,gBAlBsB,SAAA9B,GACtB,OAAOmB,EAAAA,EAAAA,IAAA,UACGF,EADH,iBACoBjB,EADpB,4BAC+CgB,IACnDb,MAAK,SAAAiB,GACJ,OAAOA,EAASC,KAAKjB,QAAQQ,KAAI,kBAA8B,CAC7DE,GAD+B,EAAGA,GAElCD,OAF+B,EAAOA,OAGtCE,QAH+B,EAAeA,QAAf,GAKlC,GAEJ,GASD,K","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\"};","import { useState, useEffect } from 'react';\nimport api from 'services/Api';\nimport css from './Reviews.module.css';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    api\n      .getMovieReviews(movieId)\n      .then(results => {\n        setReviews(results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n    return (\n       <ul className={css.reviews}>\n      {!reviews.length ? (\n       <p>Opps...there is no reviews</p>\n      ) : (\n        reviews.map(({ author, id, content }) => {\n          return (\n              <li key={id}>\n            <h4>Author: {author}</h4>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );   \n};\nexport default Reviews;","import axios from 'axios';\nconst API_KEY = '4123e3b2001d1c6636516ddf9773c242';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, title, original_title, poster_path }) => ({  id,\n            title: title || original_title,\n            poster_path, }));;\n    });\n};\n\nconst getSearchedMovies = query => {\n  return axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(\n          ({ id, title, original_title, poster_path }) => ({\n            id,\n            title: title || original_title,\n            poster_path,\n          })\n        );;\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data;\n    });\n};\n\nconst getMovieCast = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.cast;\n    } )\n\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      return response.data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n    });\n    \n};\n\nconst api = {\n  getTrendingMovies,\n  getSearchedMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\nexport default api;"],"names":["useParams","require","useState","reviews","setReviews","movieId","useEffect","api","then","results","catch","error","console","log","className","css","length","map","author","id","content","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","title","original_title","poster_path","getSearchedMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}